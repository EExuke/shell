 ############################################################################# ##
 # Copyright (C) 2010-2011 Cameo Communications, Inc.
 ############################################################################ ##
 #
 # -------------------------------------------------------------------------- --
 #     AUTHOR                   : EExuke
 #     FILE NAME                : 6_test.sh
 #     FILE DESCRIPTION         : Linux shell script file
 #     FIRST CREATION DATE      : 2020/03/30
 # --------------------------------------------------------------------------
 #     Version                  : 1.0
 #     Last Change              : 2020/03/30
 ## ************************************************************************** ##
#!/bin/bash
#-----------------------------------------------------------
#                COLOUR VARIABLES
#-----------------------------------------------------------
UNDL="\033[4m"    F6_E="\033[0m"    B_WT="\033[47m"
F_BL="\033[30m"   F_RD="\033[31m"   F_GR="\033[32m"
F_YL="\033[33m"   F_BU="\033[34m"   F_PU="\033[35m"
F_DG="\033[36m"   F_WT="\033[37m"   B_BL="\033[40m"
B_RE="\033[41m"   B_GR="\033[42m"   B_YL="\033[43m"
B_BU="\033[44m"   B_PR="\033[45m"   B_DG="\033[46m"

#-----------------------------------------------------------
#                  控制脚本
#-----------------------------------------------------------
# 要想查看作业的PID,可以在 jobs 命令中加入 -l 选项(小写的L)
jobs -l
# jobs 参数
# -l 列出进程的PID以及作业号
# -n 只列出上次shell发出的通知后改变了状态的作业
# -p 只列出作业的PID
# -r 只列出运行中的作业
# -s 只列出已停止的作业

# 用 at 命令来计划执行作业
# at [-f filename] time
# 默认情况下, at 命令会将 STDIN 的输入放到队列中。
# 可以用 -f 参数来指定用于读取命令(脚本文件)的文件名
# 时间格式：
	标准的小时和分钟格式,比如10:15。
	AM/PM指示符,比如10:15 PM。
	特定可命名时间,比如now、noon、midnight或者teatime(4 PM)
	标准日期格式,比如MMDDYY、MM/DD/YY或DD.MM.YY。
	文本日期,比如Jul 4或Dec 25,加不加年份均可。
	你也可以指定时间增量。
	当前时间+25 min
	明天10:15 PM
	10:15+7天
# 列出等待的作业
# atq 命令可以查看系统中有哪些作业在等待.

# cron时间表
# 格式如下:
	# min hour dayofmonth month dayofweek command
# crontab 命令来处理cron时间表; 
	# -l 选项列出表
# cron 目录： /etc/cron*

# anacron 程序处理关机情况的定时任务:
	# 如果anacron知道某个作业错过了执行时间,它会尽快运行该作业。
	# 这意味着如果Linux系统关机了几天,当它再次开机时,原定在关机期间运行的作业会自动运行。
# 表目录: /etc/anacrontab :
#period in days    delay in minutes    cron.daily    job-identifier    command
	#period条目定义了作业多久运行一次,以天为单位;
	#delay条目会指定系统启动后anacron程序需要等待多少分钟再开始运行错过的脚本;
	#identifier条目是一种特别的非空字符串,如 cron-weekly 。它用于唯一标识日志消息和错误邮件中的作业。
#注意,anacron不会运行位于/etc/cron.hourly的脚本。这是因为anacron程序不会处理执行时间需求小于一天的脚本！


